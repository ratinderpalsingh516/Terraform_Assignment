name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"
 
on:
 push:
   branches:
   - master
   paths:
   - terraform/**
 
env:
 # verbosity setting for Terraform logs
 TF_LOG: INFO
 # Credentials for deployment to AWS
 TF_VAR_AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
 TF_VAR_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY_ID }}
 
 # S3 bucket for the Terraform state
#  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
 
#  TF_VAR_SNOWFLAKE_ROLE: ${{ secrets.TF_SNOWFLAKE_ROLE }}
#  TF_VAR_SNOWFLAKE_ACCOUNT: ${{ secrets.TF_SNOWFLAKE_ACCOUNT }}
#  TF_VAR_SNOWFLAKE_USERNAME: ${{ secrets.TF_SNOWFLAKE_USERNAME }}
#  TF_VAR_SNOWFLAKE_REGION: ${{ secrets.TF_SNOWFLAKE_REGION }}
#  TF_VAR_SNOWFLAKE_PASSWORD: ${{ secrets.TF_SNOWFLAKE_PASSWORD }}
 
jobs:
 terraform:
   name: "Terraform Infrastructure Change Management"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       # We keep Terraform files in the terraform directory.
       working-directory: ./terraform
 
   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v2
 
     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.4.6
    
     - name: Terraform init
       id: init
       run: terraform init 
 
     - name: Terraform format
       id: fmt
       run: terraform fmt
    
     - name: Terraform validate
       id: validate
       run: terraform validate
 
     - name: Terraform plan
       id: plan
       run: |
        export SNOWFLAKE_USER=${{ secrets.TF_SNOWFLAKE_USERNAME }}
        export SNOWFLAKE_PASSWORD=${{ secrets.TF_SNOWFLAKE_PASSWORD }}
        export SNOWFLAKE_ACCOUNT=${{ secrets.TF_SNOWFLAKE_ACCOUNT }}
        export SNOWFLAKE_REGION=${{ secrets.TF_SNOWFLAKE_REGION }}
        terraform plan
       
#      - name: Terraform Plan Status
#        if: steps.plan.outcome == 'failure'
#        run: exit 1
 
